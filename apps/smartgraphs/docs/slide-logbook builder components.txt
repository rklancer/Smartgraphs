to understand the model below, imagine that all the learner prompts in smartgraph essentially build up annotations to a slideshow the learner constructs behind the scenes

what we need to do is model how to edit slides in a way that's decoupled from the view layer, and can accept edits from both the 'wizard' (which prompts the learner for data it needs to build up the slides; and which can transiently add annotations to help the user see what's going on) as well as from 'tools' just like an editor

Here are some model objects that might have to exist for this to work


a Slideshow

  is a set of slides
  
a Slide

 contains component parts and and a state machine model to represent animations and buildin/buildout of annotations
 
  
SlideBuilder
  a SlideBuilder represents/proxies a slide 'being built'.
  It accepts commands that are conceptually like 'buttons' you can push
  The big thing it does is add accept editing commands
  
  saveSlide
  cloneSlide
  addDataSeries
  
  addAnnotation
  removeAnnotation
  
  it gets events from the component dataseries, axis, etc. views; it can route or delegate them to e.g.,
  AnnotationBuilders, or directly to Wizards, or to Annotations (imagine an clickable annotation)
  
  
  note that an annotationbuilder may add and remove marks to the slide, e.g., as the user
  drags the annotation around, etc, until the annotation is "built" 
  
  (and after that the annotation may be _edited_...)

  
Wizard
  a Wizard quizzes the user and interprets their results. this is where the prompting happens
  
  it might call slideBuilder.createNewSlide({clone=true})
  
  then attach a special annotationBuilder which just listens for selection events in a particular data series
  (the slidebuilder would know to notify or delegate to the annotationbuilder)
  and it could use that selection event to know what datapoint the annotation being built would attach to.
  
  while the text could be set by the wizard,
  and some other property could be set by the users' response to a prompt.
    
  the wizard could presumably attach an annotation to the slide, and play it when the user clicks
  a certain button (e.g., a 'show me' or 'show me again' button)  
  
  it could interrogate the Annotation constructed by an AnnotationBuilder and then, if acceptable, tell the
  AnnotationBuilder to create the annotation
  
  Ã¥
  
Tool

  tools (need a better name) are like wizards without a lot of prompting
  
  e.g., you click a button in a toolbar to add an annotation label, a Tool handles it
  and decides what type of annotationbuilder to attach
  
  

Annotation 

  an annotation represents a mark or similar animation event on the graph
  
  it can contain child annotations
  
  can implement Animation mixin? maybe? to say:
  
   blink, pulsate, highlight
   fadein
   fadout
   step
  
  conceptual model for annotation and 

  

AnnotationBuilder

  talks to the SlideBuilder
  the SlideBuilder can delegate to the AnnotationBuilder, e.g., if the user clicks on a data
    point in a data series in the slide under construction, certain annotationbuilders might
    interpret that as telling them to attach the annotation under construction to that point.


each Annotation builds up a series of child Annotations


ContinuousDataSeries,
SketchDataSeries,
DiscreteDataSeries

implement DataSeries interface
   -> DataPoint, DataRange, Filter

maybe the result of a transformer?   




imagine you click on a slide in the graph pane

a select event on the corresponding point, dataseries, range happens
the annotationbuilder can register for them from the slidebuilder
